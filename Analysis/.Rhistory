setwd("~/ADNUF/Analyze")
input <- read.csv("~/ADNUF/Scripts/fundaInventory_all_threading_20150620.csv")
input <- read.csv("~/ADNUF/Scripts/fundaInventory_all_threading_20150620.csv",
sep = "|")
str(input)
min(input$date_of_sale)
unique(input$date_of_sale)
date <- input$date_of_sale
date <- as.Date(input$date_of_sale)
?as.Date
date <- as.Date(input$date_of_sale, "%m/%d/%Y")
min(date), max(date)
min(date); max(date)
unique(date)
date <- date[order(date)]
date
unique(date)
input$date <- as.Date(input$date_of_sale, "%m/%d/%Y")
?spplay
?sapply
?aggregate
str(input)
aggregate(price~date, data = input, count)
aggregate(price~date, data = input, sum)
aggregate(input$price, by=input$date, FUN=sum)
aggregate(input$price, by=list(input$date), FUN=sum)
aggregate(input$price, by=list(input$date), FUN=count)
aggregate(input$price, by=list(input$date), FUN=function(x){NROW(x)})
s <- aggregate(input$price, by=list(input$date), FUN=function(x){NROW(x)})
str(s)
plot(s)
setwd("~/ADNUF/Analyze")
input <- read.csv("~/ADNUF/Scripts/fundaInventory_all_threading_20150620.csv",
sep = "|")
str(input)
date <- as.Date(input$date_of_sale, "%m/%d/%Y")
date <- date[order(date)]
input$date <- as.Date(input$date_of_sale, "%m/%d/%Y")
s <- aggregate(input$price, by=list(input$date), FUN=function(x){NROW(x)})
str(s)
plot(s)
str(input)
summary(input$type)
verkocht <- subset(input, type == "verkocht")
describe(verkocht)
library(psych)
install.packages("psych")
library(psych)
describe(verkocht)
?describe.by
describe.by(verkocht, group = hood)
describe.by(verkocht, group = "hood")
describe(verkocht)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
?qplot
str(verkocht)
summary(verkocht)
str(verkocht)
qplot(x=date, y=(price/living_area), data = verkocht)
qplot(x=date, y=(verkocht$price/verkocht$living_area), data = verkocht)
qplot(x=verkocht$date, y=(verkocht$price/verkocht$living_area))
qplot(x=living_area, y = price, data = verkocht)
str(living_area)
str(verkocht$living_area)
verkocht$living_area <- as.numeric(verkocht$living_area)
str(verkocht$living_area)
qplot(x=living_area, y = price, data = verkocht)
str(verkocht)
qplot(x=living_area, y = price, data = verkocht, colour = type_of_apartment)
qplot(x=living_area, y = price, data = verkocht, group = type_of_apartment)
?qplot
qplot(x=living_area, y = price, data = verkocht, colour = type_of_apartment)
describe(verkocht$type_of_property)
describe(verkocht$type_of_apartment)
summary(verkocht$type_of_property)
qplot(x=living_area, y = price, data = verkocht, colour = type_of_property)
summary(verkocht$type_of_apartment)
split("abs asd")
?splot
?split
?strsplit
strsplit("asdds sdf")
strsplit("asdds sdf", split = " ")
strsplit("asdds", split = " ")
verkocht$type_of_apartment_short <- strsplit(verkocht$type_of_apartment, split = " ")[[1]]
qplot(x=living_area, y = price, data = verkocht, colour = hood)
verkocht$pps <- verkocht$price / verkocht$living_area
str(verkocht$pps)
head(verkocht, 100)
df <- subset(verkocht, pps < 600)
View(df)
subset(input, address = "Papendrechtstraat 69 1106 BN Amsterdam")
subset(input, address == "Papendrechtstraat 69 1106 BN Amsterdam")
d2 <- subset(input, address == "Papendrechtstraat 69 1106 BN Amsterdam")
str(d2)
d2
View(d2)
v2 <- subset(verkocht, address == "Papendrechtstraat 69 1106 BN Amsterdam")
View(v2)
verkocht <- subset(input, type == "verkocht")
v2 <- subset(verkocht, address == "Papendrechtstraat 69 1106 BN Amsterdam")
View(v2)
str(v2)
verkocht$living_area <- as.character(verkocht$living_area)
verkocht$living_area <- as.numeric(verkocht$living_area)
v2 <- subset(verkocht, address == "Papendrechtstraat 69 1106 BN Amsterdam")
View(v2)
str(v2)
qplot(x=living_area, y = price, data = verkocht)
verkocht$pps <- verkocht$price / verkocht$living_area
qplot(verkocht$pps)
fit <- glm(pps ~ ., data = verkocht, family = "gaussian")
fit <- glm(pps ~ ., data = verkocht, family = "gaussian")
library(caret)
?train
install.packages(("caret"))
?train
library(caret)
?train
fit <- train(pps ~ ., data = verkocht, method = "glm")
fit <- train(pps ~ ., data = verkocht, method = "rpart")
str(verkocht)
View(verkocht)
qplot(x=type_of_property, y = pps, data = verkocht)
qplot(x=year_of_construction, y = pps, data = verkocht)
qplot(x=number_rooms, y = pps, data = verkocht)
qplot(x=number_of_bathrooms, y = pps, data = verkocht)
qplot(x=hood, y = pps, data = verkocht)
?aggregate
aggregate(pps, by = hood, FUN = mean)
aggregate(pps, by = hood, data = verkocht, FUN = mean)
aggregate(verkocht$pps, by = verkocht$hood, FUN = mean)
verkocht$hood
aggregate(verkocht$pps, by = verkocht$hood, FUN = sum)
aggregate(pps ~ hood, data = verkocht, FUN = sum)
View(aggregate(pps ~ hood, data = verkocht, FUN = sum))
View(aggregate(pps ~ hood, data = verkocht, FUN = function(x){c(sum(x), count(x))}))
View(aggregate(pps ~ hood, data = verkocht, FUN = function(x){c(sum(x), nrow(x))}))
d <- aggregate(pps ~ hood, data = verkocht, FUN = function(x){c(sum(x), nrow(x))})
str(d)
d <- aggregate(pps ~ hood, data = verkocht, FUN = function(x){c(mean = mean(x), count = nrow(x))})
str(d)
View(d)
d <- aggregate(pps ~ hood, data = verkocht, FUN = function(x) {c(MEAN = mean(x), COUNT = nrow(x))})
str(d)
View(d)
install.packages("sqldf")
library(sqldf)
input <- read.csv("~/ADNUF/Scripts/fundaInventory_all_threading_20150815.csv",
sep = "|")
str(input)
date <- as.Date(input$date_of_sale, "%m/%d/%Y")
date <- date[order(date)]
input$date <- as.Date(input$date_of_sale, "%m/%d/%Y")
s <- aggregate(input$price, by=list(input$date), FUN=function(x){NROW(x)})
str(s)
plot(s)
verkocht <- subset(input, type == "verkocht")
describe(verkocht)
verkocht$living_area <- as.character(verkocht$living_area)
verkocht$living_area <- as.numeric(verkocht$living_area)
qplot(x=living_area, y = price, data = verkocht)
verkocht$pps <- verkocht$price / verkocht$living_area
d <- aggregate(pps ~ hood, data = verkocht, FUN = function(x) {c(MEAN = mean(x), COUNT = nrow(x))})
str(d)
View(d)
sqldf("
select hood, avg(pps), count(pps)
FROM verkocht
")
sqldf("
select hood, avg(pps), count(pps)
FROM verkocht
group by 1 order by 2 desc
")
t <- sqldf("
select hood, avg(pps), count(pps)
FROM verkocht
group by 1 order by 2 desc
")
View(t)
write.csv(t, file = "ppsByHood.csv", row.names = FALSE)
str(verkocht)
qplot(x=living_area, y = price, data = verkocht, colour = hood_avg_property_value)
qplot(x=living_area, y = price, data = verkocht, colour = type_of_property)
qplot(x=living_area, y = price, data = verkocht, colour = energy_label)
qplot(x=living_area, y = price, data = verkocht, colour = height)
qplot(x=living_area, y = price, data = verkocht, colour = balcony)
?strsplit
verkocht$type_of_apartment_short <- strsplit(verkocht$type_of_apartment, split=" ")[[1]]
verkocht$type_of_apartment_short <- strsplit(verkocht$type_of_apartment, split="")[[1]]
str(verkocht$type_of_apartment)
verkocht$type_of_apartment <- as.character(verkocht$type_of_apartment)
verkocht$type_of_apartment_short <- strsplit(verkocht$type_of_apartment, split=" ")[[1]]
head(verkocht$type_of_apartment_short)
qplot(x=living_area, y = price, data = verkocht, colour = type_of_apartment_short)
head(cbind(verkocht$type_of_apartment, verkocht$type_of_apartment_short))
s<- verkocht$type_of_apartment
head(s)
l <- strsplit(verkocht$type_of_apartment, split = " ")
head(l)
l[1]
l[[1]
l[[1]]
l[[1]]
l2 <- data.frame(l)
l <- strsplit(verkocht$type_of_apartment, split = " ")
head(l)
?seq_along
seq <- seq_along(s)
s
seq
qplot(x=living_area, y = price, data = verkocht, colour = hood)
qplot(x=living_area, y = price, data = verkocht)
?qplot
t_2015 <- sqldf("
select hood, avg(ifpps), count(pps)
FROM verkocht
WHERE date > '2015-01-01'
group by 1 order by 2 desc
")
t_2014 <- sqldf("
select hood, avg(pps), count(pps)
FROM verkocht
WHERE date <= '2015-01-01'
group by 1 order by 2 desc
")
t_2015 <- sqldf("
select hood, avg(pps) AS pps, count(pps) AS count
FROM verkocht
WHERE date > '2015-01-01'
group by 1 order by 2 desc
")
t_2014 <- sqldf("
select hood, avg(pps) AS pps, count(pps) AS count
FROM verkocht
WHERE date <= '2015-01-01'
group by 1 order by 2 desc
")
t <- merge(t_2015, t_2014, by = hood)
t <- merge(t_2015, t_2014, by = "hood")
write.csv(t, file = "ppsByHood.csv", row.names = FALSE)
str(verkocht)
head(t_2015)
t_2015 <- sqldf("
select hood, avg(pps) AS pps, count(pps) AS count
FROM verkocht
WHERE date > as.Date('2015-01-01')
group by 1 order by 2 desc
")
str(date_of_sale)
v2015 <- subset(verkocht, date > "2015-01-01")
str(v2015)
verkocht2015 <- subset(verkocht, date >= "2015-01-01")
verkocht2014 <- subset(verkocht, date < "2015-01-01")
t_2015 <- sqldf("
select hood, avg(pps) AS pps, count(pps) AS count
FROM verkocht2015
group by 1 order by 2 desc
")
t_2014 <- sqldf("
select hood, avg(pps) AS pps, count(pps) AS count
FROM verkocht2014
group by 1 order by 2 desc
")
t <- merge(t_2015, t_2014, by = "hood")
head(t)
write.csv(t, file = "ppsByHood.csv", row.names = FALSE)
library(psych)
library(ggplot2)
library(caret)
library(sqldf)
input <- read.csv("~/ADNUF/Scripts/FundaExpanded_20151005_added_header.csv",
sep = "|")
str(input)
str?
;
?str
str(input, list.len = 200)
date <- as.Date(input$date_of_sale, "%m/%d/%Y")
head(input$date_of_sale)
head(date)
input$date_of_sale <- as.Date(input$date_of_sale, "%m/%d/%Y")
input$date_of_rent <- as.Date(input$date_of_rent, "%m/%d/%Y")
qplot(input$final_year_of_construction)
?qplot
qplot(input$final_year_of_construction, binwidth = x)
qplot(input$final_year_of_construction, binwidth = 5)
qplot(input$final_year_of_construction[input$final_year_of_construction > 1800], binwidth = 5)
describe(input$final_year_of_construction)
str(input$final_year_of_construction)
summary(input$final_year_of_construction)
qplot(input$final_year_of_construction[input$final_year_of_construction > 1800], binwidth = 3)
qplot(input$final_year_of_construction[input$final_year_of_construction > 1800], binwidth = 10)
qplot(input$final_year_of_construction[input$final_year_of_construction > 1800], binwidth = 5)
verkocht <- subset(input, type == "verkocht")
str(verkocht)
head(verkocht[,c("price", "last_asking_price", "first_selling_price", "asking_price")],100)
verkocht$pps <- verkocht$price / verkocht$living_area
summary(verkocht$pps)
qplot(verkocht$pps)
qplot(verkocht$pps, binwidth = 100)
library(psych)
library(ggplot2)
library(caret)
library(sqldf)
#Read in data file
input <- read.csv("~/ADNUF/Scripts/FundaExpanded_20151005_added_header.csv",
sep = "|")
str(input, list.len = 200)
#Some basic proprecessing
input$date_of_sale <- as.Date(input$date_of_sale, "%m/%d/%Y")
input$date_of_rent <- as.Date(input$date_of_rent, "%m/%d/%Y")
verkocht <- subset(input, type == "verkocht")
verkocht$pps <- verkocht$price / verkocht$living_area
head(verkocht$s_insulation)
summary(verkocht$s_insulation)
str(verkocht$s_insulation)
qplot(x=s_insulation, y = pps, dta = verkocht)
qplot(x = s_insulation, y = pps, dta = verkocht)
qplot(x = s_insulation, y = pps, data = verkocht)
aggregate(pps ~ s_insulation, FUN = mean, data = verkocht)
aggregate(pps ~ s_insulation, FUN = c(mean, count), data = verkocht)
aggregate(pps ~ s_insulation, FUN = c(mean, sum), data = verkocht)
describe.by(verkocht, group = s_insulation)
describeBy(verkocht, group = s_insulation)
describeBy(verkocht$pps, group = verkocht$s_insulation)
describeBy(verkocht$pps, group = (verkocht$s_insulation == ""))
clear
describeBy(verkocht$pps, group = (verkocht$s_insulation == ""))
t.test(verkocht$pps, (verkocht$s_insulation == ""))
t.test(verkocht$pps ~ (verkocht$s_insulation == ""))
describeBy(verkocht$pps, group = (verkocht$furnished))
str(verkocht$furnished)
head(input$furnished)
summary(verkocht$furnished)
summary(input$furnished)
describe(input$furnished)
describeBy(verkocht$pps, group = (verkocht$furnished))
describeBy(verkocht$pps, group = (verkocht$furnished))
str(verkocht)
verkocht[verkocht$furnished != NA,]
verkocht[verkocht$furnished != NA,c("furnished")]
verkocht[-is.na(verkocht$furnished),c("furnished")]
is.na(verkocht$furnished)
verkocht[is.na(verkocht$furnished)==FALSE,c("furnished")]
verkocht[is.na(verkocht$furnished)==FALSE,c("furnished", "url")]
describeBy(verkocht$pps, group = (is.na(verkocht$furnished)))
describeBy(verkocht$pps, group = (is.na(verkocht$furnished_carpets)))
describeBy(verkocht$pps, group = (is.na(verkocht$furnished_curtains)))
describeBy(verkocht$pps, group = (is.na(verkocht$furnished_curtains)))
describeBy(verkocht$price, group = (is.na(verkocht$furnished_curtains)))
describeBy(verkocht$price, group = (is.na(verkocht$furnished)))
a = c(TRUE, FALSE)
a
-a
not a
!a
input$furnished <- !is.na(input$furnished)
input$furnished_carpets <- !is.na(input$furnished_carpets)
input$furnished_curtains <- !is.na(input$furnished_curtains)
verkocht <- subset(input, type == "verkocht")
verkocht$pps <- verkocht$price / verkocht$living_area
describeBy(verkocht$pps, group = (is.na(verkocht$maintenance_plan)))
str(verkocht$maintenance_plan)
describeBy(verkocht$pps, group = (verkocht$maintenance_plan))
describeBy(input$pps, group = (verkocht$maintenance_plan))
describeBy(input$price, group = (verkocht$maintenance_plan))
describeBy(input$price, group = (input$maintenance_plan))
v <- subset(input, type == "verkocht")
v$pps <- v$price / v$living_area
describeBy(v$price, group = (v$maintenance_plan))
head(v[v$maintenance_plan=="No","price"])
head(v[v$maintenance_plan=="Yes","price"])
head(v[v$maintenance_plan=="Yes",])
str(v)
str(v$maintenance_plan)
head(v[v$maintenance_plan=="",])
head(v[v$maintenance_plan=="","price"])
head(v[v$maintenance_plan=="Yes","price"])
head(v[v$maintenance_plan=="No","price"])
vk <- subset(input, type == "verkocht")
vk$pps <- vk$price / vk$living_area
vh <- subset(input, type == "verhuurd")
describeBy(vh$price, group = (vh$maintenance_plan))
head(vh[vh$maintenance_plan=="No","price"])
head(vk[vk$maintenance_plan == "Yes", "url"])
vk[vk$maintenance_plan == "Yes", "url"]
str(vk)
vh[vh$maintenance_plan == "Yes", "url"]
input[input$maintenance_plan == "Yes", "url"]
str(vk$$ number.of.showers)
str(vk$number.of.showers)
qplot(number.of.showers, pps, data = vk)
table(vk$pps, vk$number.of.showers )
qplot(pps, data = vk, group = number.of.showers )
qplot(pps, data = vk, colour = number.of.showers )
qplot(pps, data = vk, group = number.of.showers )
?qplot
ggplot(vk, aes(x=number.of.showers, y=pps)) + geom_boxplot()
ggplot(vk, aes(x=number.of.showers, y=pps, fill=number.of.showers)) + geom_boxplot()
str(vk$number.of.showers)
vk$number.of.showers <- as.factor(vk$number.of.showers)
ggplot(vk, aes(x=number.of.showers, y=pps, fill=number.of.showers)) + geom_boxplot()
ggplot(vk, aes(x=number.of.showers, y=price, fill=number.of.showers)) + geom_boxplot()
ggplot(vk, aes(x=number.of.showers, y=pps, fill=number.of.showers)) + geom_boxplot()
head(vk$number.of.showers)
type(vk$number.of.showers)
class(vk$number.of.showers)
class(vk$number.of.showers[1])
class(vk$number.of.showers[[1]])
a <- head(vk$number.of.showers)
a
a[1]
class(a[1])
class(a[[1]])
input$number.of.showers <- as.factor(input$number.of.showers)
vk <- subset(input, type == "verkocht")
vk$pps <- vk$price / vk$living_area
vh <- subset(input, type == "verhuurd")
setwd("~/ADNUF/Analysis")
input <- read.csv("~/ADNUF/Scripts/Rotterdam/FundaInventoryRotterdamLatestExpanded.csv",
sep = "|")
input <- read.csv("~/ADNUF/Scripts/FundaExpanded_20151005_added_header.csv",
sep = "|")
input <- read.csv("~/ADNUF/Scripts/Rotterdam/FundaInventoryRotterdamLatestExpanded.csv",
sep = "|")
str(input, list.len = 200)
