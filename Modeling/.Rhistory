wd
wd()
install.packages("depmixS4")
library(depmixS4)
?boxplot
library(lattice)
library(mtcars)
data(mtcars)
df <- mtcars
class(mtcars)
str(mtcars)
l <- explot(data = mtcars, mpg, cyl)
l <- xyplot(data = mtcars, mpg, cyl)
?xyplot
l <- xyplot(data = mtcars, x = mpg, y = cyl)
l <- xyplot(x = mpg, y = cyl, data = mtcars)
l <- xyplot(mpg ~ cyl, data = mtcars)
class(l)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
text("try me out")
lines("try me out")
axis("try me out")
panel.abline("try me out")
?panel.abline
?trellis.par.set
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
p<-qplot(votes, rating, data = movies) + geom_smooth()
class(p)
library(ggplot2)
?seq
x <- seq(0.4, 1, by = 0.05)
y <- (x- 0.85) / 0.07
qplot(x, y)
?qplot
qplot(x, y, geom = "line")
qplot(x, y, geom = "line", title = "Macro Econ for Hotels Brand Auction")
qplot(x, y, geom = "line", main = "Macro Econ for Hotels Brand Auction")
install.packages("devtools")
library(devtools)
devtools::install_github("google/CausalImpact")
set.seed(1)
x1 <- 100 + arima.sim(model = list(ar = 0.999), n = 100)
y <- 1.2 * x1 + rnorm(100)
y[71:100] <- y[71:100] + 10
data <- cbind(y, x1)
dim(data)
matplot(data, type = "l")
?matplot
pre.period <- c(1, 70)
post.period <- c(71, 100)
impact <- CausalImpact(data, pre.period, post.period)
library(CausalImpact)
impact <- CausalImpact(data, pre.period, post.period)
plot(impact)
summary(impact)
summary(impact, "report")
install.packages("googlepredictionapi_0.1.tar.gz", repos=NULL, type="source")
?qbeta
?pnorm
pnorm(70, mean = 80, sd = 10)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 75 / 100)
qnorm(0.95, mean = 1100, sd = 75 / 10)
?pbinom
pbinom(4, size = 5, prob = 0.5, lower.tail = FALSE)
pnorm(16, mean = 15, sd = 1) - pnorm(14, mean = 15, sd = 1)
?ppois
ppois(10, lambda = 5 * 3)
pbinom(3, size = 5, prob = 0.5, lower.tail = FALSE)
library(manipulate)
k <- 1000
xvals <- seq(-5, 5, length = k)
myplot <- function(df){
d <- data.frame(y = c(dnorm(xvals), dt(xvals, df)),
x = xvals,
dist = factor(rep(c("Normal", "T"), c(k,k))))
g <- ggplot(d, aes(x = x, y = y))
g <- g + geom_line(size = 2, aes(colour = dist))
g
}
manipulate(myplot(mu), mu = slider(1, 20, step = 1))
library(ggplot2)
manipulate(myplot(mu), mu = slider(1, 20, step = 1))
?slider
manipulate(myplot(mu), mu = slider(1, 20, step = 1))
pvals <- seq(.5, .99, by = .01)
myplot2 <- function(df){
d <- data.frame(n= qnorm(pvals),t=qt(pvals, df),
p = pvals)
g <- ggplot(d, aes(x= n, y = t))
g <- g + geom_abline(size = 2, col = "lightblue")
g <- g + geom_line(size = 2, col = "black")
g <- g + geom_vline(xintercept = qnorm(0.975))
g <- g + geom_hline(yintercept = qt(0.975, df))
g
}
manipulate(myplot2(df), df = slider(1, 20, step = 1))
data(sleep)
head(sleep)
summary(sleep)
str(sleep)
g1 <- sleep$extra[1 : 10]; g2 <- sleep$extra[11 : 20]
difference <- g2 - g1
mn <- mean(difference); s <- sd(difference); n <- 10
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
?qt
t.test(difference)
t.test(g2, g1, paired = TRUE)
t.test(extra ~ I(relevel(group, 2)), paired = TRUE, data = sleep)
?relevel
install.packages("knitr")
library("knitr")
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
?rexp
?qplot
search()
library(ggplot2)
p <- ggplot(data.frame(result2)) +
geom_histogram(aes(y = ..density..))
result2 <- numeric(nosim)
for (i in 1: nosim) {result2[i] <- mean(rexp(40, rate = lambda))}
set.seed(42)
lambda <- 0.2
nosim <- 1000
result1 <- rexp(nosim, rate = lambda)
qplot(result1, binwidth=.5, main = "Random exponentials")
result2 <- numeric(nosim)
for (i in 1: nosim) {result2[i] <- mean(rexp(40, rate = lambda))}
p <- ggplot(data.frame(result2)) +
geom_histogram(aes(y = ..density..))
p
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..))
p
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..), binwidth = 0.5)
p
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2)
p
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "red")
p
empirical_mean <- mean(result2)
theoretical_mean <- 1/lambda
percent_diff <- empirical_mean / theoretical_mean -1
empirical_sd <- sd(result2)
theoretical_sd <- 1/lambda / sqrt(40)
percent_diff <- empirical_sd / theoretical_sd -1
?seq
v <- seq(theoretical_mean - 4 * theoretical_sd, theoretical_mean + 4 * theoretical_sd, length = 1000)
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "red")
p
v
v <- seq(theoretical_mean - 4 * theoretical_sd, theoretical_mean + 4 * theoretical_sd, length = 1000)
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "red") +
geom_line(aes(x = seq, y = dnorm(seq, mean = theoretical_mean, sd = theoretical_sd)))
p
v <- seq(theoretical_mean - 4 * theoretical_sd, theoretical_mean + 4 * theoretical_sd, length = 1000)
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "red") +
geom_line(aes(x = seq, y = dnorm(v, mean = theoretical_mean, sd = theoretical_sd)))
p
?dorm
dnorm
?dnorm
v <- seq(theoretical_mean - 4 * theoretical_sd, theoretical_mean + 4 * theoretical_sd, length = 1000)
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "red") +
geom_line(aes(x = seq, y = dnorm(v, mean = theoretical_mean, sd = theoretical_sd)), colour = "black")
p
v <- seq(theoretical_mean - 4 * theoretical_sd, theoretical_mean + 4 * theoretical_sd, length = 1000)
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "red") +
geom_line(aes(x = v, y = dnorm(v, mean = theoretical_mean, sd = theoretical_sd)), colour = "black")
p
v <- seq(theoretical_mean - 4 * theoretical_sd, theoretical_mean + 4 * theoretical_sd, length = 1000)
p <- ggplot(data.frame(result2), aes(x = result2)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "red") +
geom_line(aes(x = v, y = dnorm(v, mean = theoretical_mean, sd = theoretical_sd)))
p
data(ToothGrowth)
str(ToothGrowth)
summary(ToothGrowth)
?ToothGrowth
library{ggplot2}
data(ToothGrowth)
plotmatrix(ToothGrowth, colour = supp)
library{GGally}
library{GGally}
library(ggplot2)
library(GGally)
plotmatrix(ToothGrowth, colour = supp)
ggpairs(ToothGrowth, colour = supp)
?ggpairs
ggpairs(data = ToothGrowth, colour = supp)
ggpairs(data = ToothGrowth, color = supp)
ggpairs(data = ToothGrowth, color = ToothGrowth$supp)
ggpairs(data = ToothGrowth)
ggpairs(data = ToothGrowth, colour = "supp")
?t.test
t.test(len ~ supp, data = ToothGrowth}
t.test(len ~ supp, data = ToothGrowth)
oj <- subset(ToothGrowth, supp =="OJ")
t.test(len ~ dose, data = ToothGrowth)
str(ToothGrowth)
unique(ToothGrowth$dose)
t <- t.test(len ~ dose, data=subset(oj, dose != 2.0))
str(t)
t$p.value
?t.test
library(caret)
library(rattle)
setwd("~/Funda/Modeling")
funda <- read.csv("fundaInventory_20150502.csv", sep = "|")
str(funda)
df <- subset(funda, price <= 5000)
df <- df[,c("price", "hood", "number_rooms", "living_area", "hood_avg_property_value")]
rpart.grid <- expand.grid(.cp=0.01)
fit <- train(price ~ hood + number_rooms + living_area + hood_avg_property_value, data = df, method = "rpart",
tuneGrid=rpart.grid)
fancyRpartPlot(fit$finalModel)
rpart.grid <- expand.grid(.cp=0.5)
fit <- train(price ~ hood + number_rooms + living_area + hood_avg_property_value, data = df, method = "rpart",
tuneGrid=rpart.grid)
fancyRpartPlot(fit$finalModel)
